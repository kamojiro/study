---

- name: make 99-kubernetes-cri.conf
  copy:
    remote_src: no
    src: 99-kubernetes-cri.conf
    dest: /etc/sysctl.d/99-kubernetes-cri.conf

- name: activate 99-kubernetes-cri.conf
  shell: sysctl --system

- name: prepare to install crio
  apt:
    name:
      - curl
      - gnupg2
      - libseccomp2

- name: setup cri-o install
  shell: |
    echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ os_version }}/ /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
    echo "deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/{{ crio_version }}/{{ os_version }}/ /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.list

- name: make /usr/share/keyrings directory
  file:
    path: /usr/share/keyrings
    state: directory
    owner: "root"
    group: "root"
    mode: "775"

- name: set key for cri-o
  shell: |
    curl -L https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:{{ crio_version }}/{{ os_version }}/Release.key | apt-key add -
    curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ os_version }}/Release.key | apt-key add -

- name: apt update
  apt:
    update_cache: yes

- name: install cri-o
  apt:
    name:
      - cri-o

- name: install cri-o-runc
  apt:
    name:
      - cri-o-runc

# - name: prepare to install crio with script
#   apt:
#     name:
#       - curl
#       - jq
#       - tar

# - name: execute crio installation script
#   shell: |
#     curl https://raw.githubusercontent.com/cri-o/cri-o/main/scripts/get | bash -s -- -a arm64

- name: start crio
  systemd:
    name: crio.service
    state: restarted
    daemon_reload: yes
    enabled: yes

- name: cdriver setting
  copy:
    remote_src: no
    src: kubelet
    dest: /etc/default/kubelet